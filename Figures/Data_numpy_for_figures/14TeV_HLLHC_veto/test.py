import numpy as np
import matplotlib.pyplot as plt


from math import log10, floor

#print(np.load("14TeV_veto35_nnllnnlo_centre.npy"))
#print(np.load("14TeV_veto35_nnllnnlo_min.npy"))
#print(np.load("14TeV_veto35_nnllnnlo_max.npy"))
def round_to_5(x):
    rounded=[]
    for i in range(len(x)):
        rounded.append(np.round(x[i], 6-int(floor(log10(abs(x[i]))))))
    return np.array(rounded)

bins=round_to_5(np.logspace(np.log10(200), np.log10(4000), 17))
bin_centres18=(bins[0:16] + bins[1:17])/2


bin_centres18=np.concatenate(([bin_centres18[0]], bin_centres18, [bin_centres18[15]]))
bin_widths18=np.array([41.1817, 41.1817, 49.6614, 59.8871, 72.2183, 87.0887, 105.021, 126.6458, 152.7232, 184.1698, 222.093, 267.823, 322.97, 389.473, 469.668, 566.377, 682.999, 682.999])


ggnll_centre=bin_widths18*2*3000*np.array([6.45544e-03, 6.45544e-03, 3.07100e-03, 1.40140e-03, 5.90418e-04, 2.27091e-04, 8.05973e-05, 2.63558e-05, 8.09415e-06, 2.27812e-06, 5.99358e-07, 1.44374e-07, 3.21025e-08, 6.41989e-09, 1.17816e-09, 1.85236e-10, 2.29779e-11, 2.29779e-11])
ggnll_min=bin_widths18*2*3000*np.array([5.48801e-03, 5.48801e-03, 2.59680e-03, 1.17376e-03, 4.90662e-04, 1.87089e-04, 6.57041e-05, 2.13273e-05, 6.46158e-06, 1.80141e-06, 4.67080e-07, 1.11173e-07, 2.44243e-08, 4.80111e-09, 8.72933e-10, 1.32022e-10, 1.59206e-11, 1.59206e-11])
ggnll_max=bin_widths18*2*3000*np.array([7.80447e-03, 7.80447e-03, 3.68548e-03, 1.68809e-03, 7.21053e-04, 2.81473e-04, 1.01219e-04, 3.38626e-05, 1.04788e-05, 3.02858e-06, 8.09445e-07, 1.99010e-07, 4.47757e-08, 9.19993e-09, 1.76740e-09, 2.74790e-10, 3.72237e-11, 3.72237e-11])

ggnll_050050050=bin_widths18*2*3000*np.array([6.45544e-03, 6.45544e-03, 3.07100e-03, 1.40140e-03, 5.90418e-04, 2.27091e-04, 8.05973e-05, 2.63558e-05, 8.09415e-06, 2.27812e-06, 5.99358e-07, 1.44374e-07, 3.21025e-08, 6.41989e-09, 1.17816e-09, 1.85236e-10, 2.29779e-11, 2.29779e-11])
ggnll_050050025=bin_widths18*2*3000*np.array([7.69860e-03, 7.69860e-03, 3.63274e-03, 1.63955e-03, 6.83733e-04, 2.60289e-04, 9.11968e-05, 2.94857e-05, 8.92076e-06, 2.48392e-06, 6.41026e-07, 1.52984e-07, 3.30940e-08, 6.58106e-09, 1.18220e-09, 1.78093e-10, 2.15456e-11, 2.15456e-11])
ggnll_050050100=bin_widths18*2*3000*np.array([6.86841e-03, 6.86841e-03, 3.33433e-03, 1.54048e-03, 6.57648e-04, 2.56413e-04, 9.28084e-05, 3.08854e-05, 9.54617e-06, 2.82411e-06, 8.09445e-07, 1.86222e-07, 4.09492e-08, 8.96161e-09, 1.60058e-09, 2.51474e-10, 3.70995e-11, 3.70995e-11])
ggnll_025025050=bin_widths18*2*3000*np.array([7.59995e-03, 7.59995e-03, 3.65937e-03, 1.68809e-03, 7.21053e-04, 2.81473e-04, 1.01219e-04, 3.38626e-05, 1.04788e-05, 3.02858e-06, 8.05588e-07, 1.99010e-07, 4.47757e-08, 9.19993e-09, 1.76740e-09, 2.74790e-10, 3.72237e-11, 3.72237e-11])
ggnll_025050050=bin_widths18*2*3000*np.array([7.80447e-03, 7.80447e-03, 3.68548e-03, 1.66873e-03, 6.97816e-04, 2.66678e-04, 9.39193e-05, 3.04925e-05, 9.27850e-06, 2.59614e-06, 6.76043e-07, 1.61675e-07, 3.57428e-08, 7.08296e-09, 1.29198e-09, 2.01124e-10, 2.47067e-11, 2.47067e-11])
ggnll_050025050=bin_widths18*2*3000*np.array([6.28935e-03, 6.28935e-03, 3.05154e-03, 1.41993e-03, 6.10339e-04, 2.39609e-04, 8.71017e-05, 2.91820e-05, 9.13828e-06, 2.65651e-06, 7.14206e-07, 1.76607e-07, 4.02455e-08, 8.39720e-09, 1.58206e-09, 2.58328e-10, 3.36677e-11, 3.36677e-11])
ggnll_050100050=bin_widths18*2*3000*np.array([6.46548e-03, 6.46548e-03, 3.03112e-03, 1.35953e-03, 5.63672e-04, 2.13314e-04, 7.42661e-05, 2.38500e-05, 7.17279e-06, 1.97854e-06, 5.08833e-07, 1.20783e-07, 2.58628e-08, 5.16238e-09, 9.25514e-10, 1.38877e-10, 1.67378e-11, 1.67378e-11])
ggnll_100050050=bin_widths18*2*3000*np.array([5.48801e-03, 5.48801e-03, 2.63624e-03, 1.21283e-03, 5.13861e-04, 1.99346e-04, 7.12471e-05, 2.35256e-05, 7.28787e-06, 2.07030e-06, 5.47813e-07, 1.34830e-07, 2.97420e-08, 6.08524e-09, 1.12387e-09, 1.73717e-10, 2.23835e-11, 2.23835e-11])
ggnll_100100050=bin_widths18*2*3000*np.array([5.49776e-03, 5.49776e-03, 2.59680e-03, 1.17376e-03, 4.90662e-04, 1.87089e-04, 6.57041e-05, 2.13273e-05, 6.46158e-06, 1.80141e-06, 4.67080e-07, 1.11173e-07, 2.44243e-08, 4.80111e-09, 8.72933e-10, 1.32022e-10, 1.59206e-11, 1.59206e-11])


plt.figure()



plt.step(bin_centres18, ggnll_050050050/ggnll_centre)
plt.step(bin_centres18, ggnll_050050025/ggnll_centre)
plt.step(bin_centres18, ggnll_050050100/ggnll_centre)
plt.step(bin_centres18, ggnll_025025050/ggnll_centre)
plt.step(bin_centres18, ggnll_025050050/ggnll_centre)
plt.step(bin_centres18, ggnll_050025050/ggnll_centre)
plt.step(bin_centres18, ggnll_100050050/ggnll_centre)
plt.step(bin_centres18, ggnll_100100050/ggnll_centre)
plt.step(bin_centres18, ggnll_centre/ggnll_centre, color="k")
plt.step(bin_centres18, ggnll_min/ggnll_centre, color="k")
plt.step(bin_centres18, ggnll_max/ggnll_centre, color="k")
plt.loglog()
plt.savefig("maxtest.pdf")

